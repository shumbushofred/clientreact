{"version":3,"sources":["logo.svg","components/Studentlist.js","components/Addstudent.js","components/Courselist.js","components/Enrolllist.js","components/Addcourse.js","components/Addenroll.js","components/Enrollsearch.js","components/Coursesearch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Studentlist","props","getStudent","_","fetch","then","response","json","setState","students","data","catch","err","console","error","state","bind","App","Joke","this","jokeComponents","map","joke","key","STUDENTID","id","student","STUDENTNAME","major","MAJOR","striped","bordered","hover","React","Component","Addstudent","addproduct","sname","smajor","theclick","thefre","handleChange","window","location","event","target","name","value","type","onChange","onClick","Adddem","Courselist","getcourse","courses","THEKEY","deptcode","DEPTCODE","coursenum","COURSENUM","title","TITLE","credithours","CREDITHOURS","Enrolllist","getroll","enroll","PRKEY","sid","SID","Addcourse","addcourse","Addenroll","addenroll","Enrollsearch","searchstudent","studentname","studentlist","className","Coursesearch","searchid","deptcodee","to","style","color","wehere","exact","path","component","tothelinks","Test","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d9ac04e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\"\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nclass Studentlist extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n         students: []\r\n         \r\n         }\r\n    \r\n         this.getStudent = this.getStudent.bind(this)\r\n         this.App = this.App.bind(this)\r\n       \r\n         this.Joke = this.Joke.bind(this)\r\n        }\r\n        componentWillMount() {\r\n            this.getStudent();\r\n          }\r\n          \r\n          \r\n        getStudent = _ => {\r\n            fetch('https://thenodejsf.herokuapp.com/servr/product')\r\n                  .then(response => response.json())\r\n                  .then(response => this.setState({students: response.data }))\r\n                  .catch(err => console.error(err))\r\n          }\r\n         \r\n        \r\n        App() {\r\n            // const thes ={props.students}\r\n             const jokeComponents =this.state.students.map(joke => <this.Joke key={joke.STUDENTID} id={joke.STUDENTID} student={joke.STUDENTNAME} major= {joke.MAJOR} />)\r\n             \r\n\r\n             \r\n                   return (\r\n                    <ReactBootStrap.Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>student ID</th>\r\n                        <th>Studentname</th>\r\n                        <th>themajor</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {jokeComponents}\r\n                </tbody>  \r\n                </ReactBootStrap.Table>              \r\n                \r\n             )\r\n         }\r\n         \r\n         Joke(props) {\r\n            return (\r\n            \r\n                <tr key={props.key}>\r\n                    <td>{props.id}</td>\r\n                    <td>{props.student}</td>\r\n                    <td>{props.major}</td>\r\n                </tr>\r\n                 \r\n             )\r\n         }\r\n  render() {\r\n      return(\r\n      <div>\r\n          {this.App()}\r\n          \r\n          </div>\r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Studentlist\r\n","import React from \"react\"\r\n\r\nimport Studentlist from './Studentlist.js';\r\nclass Addstudent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n        sname:\"\",\r\n        smajor:\"\",\r\n        theclick: false\r\n         \r\n         }\r\n    \r\n         this.addproduct = this.addproduct.bind(this)\r\n         this.thefre = this.thefre.bind(this)\r\n         this.handleChange = this.handleChange.bind(this)\r\n        }\r\n    \r\n          addproduct =_ => {\r\n  \r\n            fetch(`https://thenodejsf.herokuapp.com/servr/product/add?nam=${this.state.sname}&major=${this.state.smajor}`)\r\n                  .then(response => response.json())\r\n                  .catch(err =>console.error(err))\r\n                       \r\n          }\r\n\r\n          thefre()\r\n          {\r\n            window.location = window.location;\r\n          }\r\n\r\n          handleChange(event) {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            })\r\n          }\r\n         \r\n          Adddem() {\r\n           \r\n              return (\r\n              <div >\r\n                <h1> welcome, add student here</h1>\r\n                <label>\r\n              student name:\r\n              <input \r\n              type=\"text\"\r\n              name=\"sname\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n              <label>\r\n              major:\r\n              <input \r\n              type=\"text\"\r\n              name=\"smajor\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n             <button onClick={() => {\r\n                 this.addproduct();\r\n                this.thefre()\r\n            \r\n              }}>Add product</button>\r\n                  \r\n                </div>   \r\n                    \r\n            )\r\n          }\r\n\r\n  render() {\r\n      return(\r\n      <div>\r\n          {this.Adddem()}\r\n         <Studentlist />\r\n      </div>\r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Addstudent\r\n","import React from \"react\"\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nclass Courselist extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n         courses: []\r\n         \r\n         }\r\n    \r\n         this.getcourse = this.getcourse.bind(this)\r\n         this.App = this.App.bind(this)\r\n         this.Joke = this.Joke.bind(this)\r\n        }\r\n        componentWillMount() {\r\n            this.getcourse();\r\n          }\r\n          \r\n          \r\n          getcourse = _ => {\r\n            fetch('https://thenodejsf.herokuapp.com/servr/course')\r\n                  .then(response => response.json())\r\n                  .then(response => this.setState({courses: response.data }))\r\n                  .catch(err => console.error(err))\r\n          }\r\n          \r\n        App() {\r\n            // const thes ={props.students}\r\n             const jokeComponents =this.state.courses.map(joke => <this.Joke key={joke.THEKEY} \r\n                id ={joke.THEKEY}\r\n                deptcode= {joke.DEPTCODE} \r\n                coursenum= {joke.COURSENUM}\r\n                title= {joke.TITLE}\r\n                credithours= {joke.CREDITHOURS}\r\n                 />)\r\n             \r\n\r\n             \r\n                   return (\r\n                    <ReactBootStrap.Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>deptcode</th>\r\n                        <th>coursenum</th>\r\n                        <th>title</th>\r\n                        <th>credithours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {jokeComponents}\r\n                </tbody>  \r\n                </ReactBootStrap.Table>              \r\n                \r\n             )\r\n         }\r\n         \r\n         Joke(props) {\r\n            return (\r\n            \r\n                <tr key={props.id}>\r\n                    <td>{props.deptcode}</td>\r\n                    <td>{props.coursenum}</td>\r\n                    <td>{props.title}</td>\r\n                    <td>{props.credithours}</td>\r\n                </tr>\r\n                 \r\n             )\r\n         }\r\n  render() {\r\n      return(\r\n      <div>\r\n          {this.App()}\r\n          \r\n          </div>\r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Courselist\r\n","import React from \"react\"\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nclass Enrolllist extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n         enroll: []\r\n         \r\n         }\r\n    \r\n         this.getroll = this.getroll.bind(this)\r\n         this.App = this.App.bind(this)\r\n         this.Joke = this.Joke.bind(this)\r\n        }\r\n        componentWillMount() {\r\n            this.getroll();\r\n          }\r\n          \r\n          \r\n          getroll = _ => {\r\n            fetch('https://thenodejsf.herokuapp.com/servr/enrollment')\r\n                  .then(response => response.json())\r\n                  .then(response => this.setState({enroll: response.data }))\r\n                  .catch(err => console.error(err))\r\n          }\r\n          \r\n        App() {\r\n            // const thes ={props.students}\r\n             const jokeComponents =this.state.enroll.map(joke => <this.Joke key={joke.PRKEY}\r\n                id={joke.PRKEY} \r\n                sid= {joke.SID} \r\n                 deptcode= {joke.DEPTCODE} \r\n                 coursenum= {joke.COURSENUM}\r\n                 />)\r\n             \r\n\r\n             \r\n                   return (\r\n                    <ReactBootStrap.Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>SID</th>\r\n                        <th>Deptcode</th>\r\n                        <th>coursenum</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {jokeComponents}\r\n                </tbody>  \r\n                </ReactBootStrap.Table>              \r\n                \r\n             )\r\n         }\r\n         \r\n         Joke(props) {\r\n            return (\r\n            \r\n                <tr key={props.id}>\r\n                    <td>{props.sid}</td>\r\n                    <td>{props.deptcode}</td>\r\n                    <td>{props.coursenum}</td>\r\n                    \r\n                </tr>\r\n                 \r\n             )\r\n         }\r\n  render() {\r\n      return(\r\n      <div>\r\n          {this.App()}\r\n          \r\n          </div>\r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Enrolllist\r\n","import React from \"react\"\r\n\r\nimport Courselist from './Courselist.js';\r\nclass Addcourse extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n        deptcode:\"\",\r\n        coursenum:\"\",\r\n        title:\"\",\r\n        credithours:\"\"\r\n         }\r\n    \r\n         this.addcourse = this.addcourse.bind(this)\r\n         this.thefre = this.thefre.bind(this)\r\n         this.handleChange = this.handleChange.bind(this)\r\n        }\r\n    \r\n        addcourse =_ => {\r\n  \r\n            fetch(`https://thenodejsf.herokuapp.com/servr/course/add?DEPTCODE=${this.state.deptcode}&COURSENUM=${this.state.coursenum}&TITLE=${this.state.title}&CREDITHOURS=${this.state.credithours}`)\r\n                  .then(response => response.json())\r\n                  .catch(err =>console.error(err))\r\n                       \r\n          }\r\n\r\n          thefre()\r\n          {\r\n            window.location = window.location;\r\n          }\r\n\r\n          handleChange(event) {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            })\r\n          }\r\n         \r\n          Adddem() {\r\n           \r\n              return (\r\n              <div >\r\n                <h1> welcome,add course here</h1>\r\n              <label>\r\n              dept:  \r\n              <input \r\n              type=\"text\"\r\n              name=\"deptcode\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n              <label>\r\n              coursenum:  \r\n              <input \r\n              type=\"text\"\r\n              name=\"coursenum\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n              <label>\r\n              title: \r\n              <input \r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange= {this.handleChange}\r\n              />\r\n               </label>\r\n               <label>\r\n              credit hours: \r\n              <input \r\n              type=\"text\"\r\n              name=\"credithours\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n             <button onClick={() => {\r\n                 this.addcourse();\r\n                this.thefre()\r\n            \r\n              }}>Add course</button>\r\n                  \r\n                </div>   \r\n                    \r\n            )\r\n          }\r\n\r\n  render() {\r\n      return(\r\n      <div>\r\n          {this.Adddem()}\r\n         <Courselist />\r\n      </div>\r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Addcourse\r\n","import React from \"react\"\r\n\r\nimport Enrolllist from './Enrolllist.js';\r\nclass Addenroll extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n        sid:\"\",\r\n        deptcode:\"\",\r\n        coursenum:\"\"\r\n       \r\n         }\r\n    \r\n         this.addenroll = this.addenroll.bind(this)\r\n         this.thefre = this.thefre.bind(this)\r\n         this.handleChange = this.handleChange.bind(this)\r\n        }\r\n    \r\n        addenroll =_ => {\r\n  \r\n            fetch(`https://thenodejsf.herokuapp.com/servr/enrollment/add?SID=${this.state.sid}&DEPTCODE=${this.state.deptcode}&COURSENUM=${this.state.coursenum}`)\r\n                  .then(response => response.json())\r\n                  .catch(err =>console.error(err))\r\n                       \r\n          }\r\n\r\n          thefre()\r\n          {\r\n            window.location = window.location;\r\n          }\r\n\r\n          handleChange(event) {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            })\r\n          }\r\n         \r\n          Adddem() {\r\n           \r\n              return (\r\n              <div >\r\n                <h1> welcome, add enrollment here</h1>\r\n                <label>\r\n              SID:\r\n              <input \r\n              type=\"text\"\r\n              name=\"sid\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n              <label>\r\n              dept code:\r\n              <input \r\n              type=\"text\"\r\n              name=\"deptcode\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n              <label>\r\n              course number:\r\n              <input \r\n              type=\"text\"\r\n              name=\"coursenum\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              </label>\r\n             <button onClick={() => {\r\n                 this.addenroll();\r\n                this.thefre()\r\n            \r\n              }}>Add course</button>\r\n                  \r\n                </div>   \r\n                    \r\n            )\r\n          }\r\n\r\n  render() {\r\n      return(\r\n      <div>\r\n          {this.Adddem()}\r\n         <Enrolllist />\r\n      </div>\r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Addenroll\r\n","import React from \"react\"\r\nimport Studentlist from './Studentlist.js';\r\nimport Enrolllist from './Enrolllist.js';\r\nimport './compstyle.css';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nclass Enrollsearch extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n        studentlist:[],\r\n        studentname:\"\",\r\n       \r\n         }\r\n    \r\n         this.searchstudent = this.searchstudent.bind(this)\r\n         this.thefre = this.thefre.bind(this)\r\n         this.handleChange = this.handleChange.bind(this)\r\n        }\r\n    \r\n        searchstudent =_ => {\r\n  \r\n            fetch(`https://thenodejsf.herokuapp.com/servr/enrollment/search?namee=${this.state.studentname}`)\r\n                  .then(response => response.json())\r\n                  .then(response => this.setState({studentlist: response.data }))\r\n                  .catch(err =>console.error(err))\r\n                       \r\n          }\r\n          App() {\r\n            // const thes ={props.students}\r\n             const jokeComponents =this.state.studentlist.map(joke => <this.Joke key={joke.PRKEY}\r\n                id={joke.PRKEY} \r\n                sid= {joke.SID} \r\n                 deptcode= {joke.DEPTCODE} \r\n                 coursenum= {joke.COURSENUM}\r\n                 />)\r\n             \r\n\r\n             \r\n                   return (\r\n                    <ReactBootStrap.Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>SID</th>\r\n                        <th>Deptcode</th>\r\n                        <th>coursenum</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {jokeComponents}\r\n                </tbody>  \r\n                </ReactBootStrap.Table>              \r\n                \r\n             )\r\n         }\r\n         \r\n         Joke(props) {\r\n            return (\r\n            \r\n                <tr key={props.id}>\r\n                    <td>{props.sid}</td>\r\n                    <td>{props.deptcode}</td>\r\n                    <td>{props.coursenum}</td>\r\n                    \r\n                </tr>\r\n                 \r\n             )\r\n         }\r\n\r\n          thefre()\r\n          {\r\n            window.location = window.location;\r\n          }\r\n\r\n          handleChange(event) {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            })\r\n          }\r\n         \r\n          Adddem() {\r\n           \r\n              return (\r\n              <div >\r\n                <h1> add student name </h1>\r\n              \r\n              <input \r\n              type=\"text\"\r\n              name=\"studentname\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              \r\n             <button onClick={() => {\r\n                 this.searchstudent();\r\n               \r\n            \r\n              }}>search student</button>\r\n                  \r\n                </div>   \r\n                    \r\n            )\r\n          }\r\n\r\n  render() {\r\n      return(\r\n        <div>\r\n      <div className=\"thetables\"> \r\n      <div className=\"theleft\"> \r\n      <h1>enrollment list</h1>\r\n       <Enrolllist />\r\n       </div>\r\n      <div className=\"theleft\"> \r\n      <h1>Student list</h1>\r\n       <Studentlist />\r\n        </div>\r\n        </div>\r\n        {this.Adddem()}\r\n        {this.App()}\r\n      </div>\r\n      \r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Enrollsearch\r\n","import React from \"react\"\r\n\r\nimport Courselist from './Courselist.js';\r\nimport './compstyle.css';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nclass Coursesearch extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n      this.state = {\r\n        studentlist:[],\r\n        deptcodee:\"\",\r\n       \r\n         }\r\n    \r\n         this.searchid = this.searchid.bind(this)\r\n         this.thefre = this.thefre.bind(this)\r\n         this.handleChange = this.handleChange.bind(this)\r\n        }\r\n    \r\n        searchid =_ => {\r\n  \r\n            fetch(`https://thenodejsf.herokuapp.com/servr/course/search?DPTC=${this.state.deptcodee}`)\r\n                  .then(response => response.json())\r\n                  .then(response => this.setState({studentlist: response.data }))\r\n                  .catch(err =>console.error(err))\r\n                       \r\n          }\r\n          App() {\r\n            // const thes ={props.students}\r\n             const jokeComponents =this.state.studentlist.map(joke => <this.Joke key={joke.THEKEY} \r\n                id ={joke.THEKEY}\r\n                deptcode= {joke.DEPTCODE} \r\n                coursenum= {joke.COURSENUM}\r\n                title= {joke.TITLE}\r\n                credithours= {joke.CREDITHOURS}\r\n                 />)\r\n             \r\n\r\n             \r\n                   return (\r\n                    <ReactBootStrap.Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>deptcode</th>\r\n                        <th>coursenum</th>\r\n                        <th>title</th>\r\n                        <th>credithours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {jokeComponents}\r\n                </tbody>  \r\n                </ReactBootStrap.Table>              \r\n                \r\n             )\r\n         }\r\n         \r\n         Joke(props) {\r\n            return (\r\n            \r\n                <tr key={props.id}>\r\n                    <td>{props.deptcode}</td>\r\n                    <td>{props.coursenum}</td>\r\n                    <td>{props.title}</td>\r\n                    <td>{props.credithours}</td>\r\n                </tr>\r\n                 \r\n             )\r\n         }\r\n\r\n          thefre()\r\n          {\r\n            window.location = window.location;\r\n          }\r\n\r\n          handleChange(event) {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            })\r\n          }\r\n         \r\n          Adddem() {\r\n           \r\n              return (\r\n              <div >\r\n                <h1> Please add Dept code to show list with the same Dept code</h1>\r\n              \r\n              <input \r\n              type=\"text\"\r\n              name=\"deptcodee\"\r\n              onChange= {this.handleChange}\r\n              />\r\n              \r\n             <button onClick={() => {\r\n                 this.searchid();\r\n                this.App();\r\n            \r\n              }}>search deptcode</button>\r\n                  \r\n                </div>   \r\n                    \r\n            )\r\n          }\r\n\r\n  render() {\r\n      return(\r\n        <div>\r\n      <div className=\"thetables\"> \r\n      \r\n      <div className=\"theleft\"> \r\n      <h1>Course list</h1>\r\n       <Courselist />\r\n        </div>\r\n        </div>\r\n        {this.Adddem()}\r\n        {this.App()}\r\n      </div>\r\n      \r\n      )\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Coursesearch\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './sty.css';\nimport Studentlist from './components/Studentlist.js';\nimport Addstudent from './components/Addstudent.js';\nimport Courselist from './components/Courselist.js';\nimport Enrolllist from './components/Enrolllist.js';\nimport Addcourse from './components/Addcourse.js';\nimport Addenroll from './components/Addenroll.js';\nimport Enrollsearch from './components/Enrollsearch.js';\nimport Coursesearch from './components/Coursesearch.js';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nclass App extends React.Component{\n\n  tothelinks()\n  {\n    return(\n      <ul >\n        <Link to=\"/studentlist\">\n          <li className=\"thebutton\">Show Student list</li>\n          </Link>\n          <Link to=\"/addstudent\">\n          <li className=\"thebutton\">Add student to the student list</li>\n          </Link>\n          <Link to=\"/course\">\n          <li className=\"thebutton\">Show course list</li>\n          </Link>\n          <Link to=\"/enroll\">\n          <li className=\"thebutton\">show the enrollment list</li>\n          </Link>\n          <Link to=\"/addcourse\">\n          <li className=\"thebutton\">Add course to course list</li>\n          </Link>\n          <Link to=\"/addenroll\">\n          <li className=\"thebutton\">Add an enrollment</li>\n          </Link>\n          <Link to=\"/enrollsearch\">\n          <li className=\"thebutton\">Search the enrollment</li>\n          </Link>\n          <Link to=\"/coursesearch\">\n          <li className=\"thebutton\">Search the courses</li>\n          </Link>\n      </ul>\n    )\n     \n  }\n  wehere()\n  {\n    return(\n\n    <nav>  \n      <ul className=\"navlist\">\n        <Link to=\"/\">\n          <li style={{color: \"white\"}} >Home</li>\n          </Link>\n      </ul>\n      </nav>\n    )\n     \n  }\nTest() {\n  //const arraystudent = this.state.students.map(this.renderStudent)\n    return (\n      \n     <Router>\n       <div>\n       {this.wehere()} \n     \n        <Switch>\n           <Route  exact path=\"/\"  component={this.tothelinks} />\n           <Route  path=\"/studentlist\" > <Studentlist /> </Route>\n           <Route  exact  path=\"/addstudent\"> <Addstudent /> </Route>\n           <Route  exact  path=\"/course\"> <Courselist /> </Route>\n           <Route  exact  path=\"/enroll\"> <Enrolllist /> </Route>\n           <Route  exact  path=\"/addcourse\"> <Addcourse /> </Route>\n           <Route  exact  path=\"/addenroll\"> <Addenroll /> </Route>\n           <Route  exact  path=\"/enrollsearch\"> <Enrollsearch /> </Route>\n           <Route  exact  path=\"/coursesearch\"> <Coursesearch /> </Route>\n         \n        </Switch>\n        </div>\n    </Router>      \n  )\n}\n\n\n\nrender() {\n  //const { studentss} = this.state.students;\n  return (\n    <div className=\"App\">  \n       {this.Test()}\n        </div>\n  )\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}